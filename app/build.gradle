apply plugin: 'com.android.application'

def java_lib_dir = "C:/Source/VEGA_Library/ANDROID/libs/S1F/Ver0001";
def jni_lib_dir = 'C:/Source/VEGA_Library/ANDROID/jniLibs/S1F/Ver0001';
android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.persistent.app"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "2.1"
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments '-DPLATFORM_TARGET=android',
                        "-DJNI_LIB_PATH=${jni_lib_dir}/armeabi-v7a",
                        '-DANDROID_TOOLCHAIN=clang'
            }
        }
	
	    ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'armeabi-v7a'
        }

    }

    sourceSets.main {
//        jniLibs.srcDirs = ['src/main/jniLibs']
        jniLibs.srcDirs = [jni_lib_dir]
        jni.srcDirs = []
    }

    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libcrypto.so'
        pickFirst 'lib/armeabi-v7a/libcurl.so'
        pickFirst 'lib/armeabi-v7a/libssl.so'
    }

    signingConfigs {
        release {
            storeFile file("./SignAPK/SignDemo.jks")
            storePassword '123456'
            keyAlias 'demo'
            keyPassword '123456'
        }

        debug {
            storeFile file("./SignAPK/SignDemo.jks")
            storePassword '123456'
            keyAlias 'demo'
            keyPassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions 'cpuArch'
    productFlavors {
        arm7 {
            dimension 'cpuArch'
            ndk {
                abiFilter 'armeabi-v7a'
            }
        }

    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "SHARLS_ECR"
            def SEP = "_"
//            def flavor = variant.productFlavors[0].name
//            def buildType = variant.variantData.variantConfiguration.buildType.name
            def version = variant.versionName
            def date = new Date();
//            def formattedDate = date.format('ddMMyy_HHmm')
            def formattedDate = date.format("yyMMddhhmmss", TimeZone.getTimeZone("GMT+08"))
//            def newApkName = project + SEP + flavor + SEP + buildType + SEP + version + SEP + formattedDate + ".apk"
//            def newApkName = project + SEP + buildType + SEP + version + SEP + formattedDate + ".apk"
            def newApkName = project + ".apk"
            outputFileName = new File(newApkName)
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    ndkVersion '21.0.6113669'
}

repositories {
    mavenCentral()
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.squareup.okhttp:okhttp:2.5.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    //Check Memory Leak
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
}
